pipeline:
  # restore node_modules from cache
  restore-cache:
    image: drillster/drone-volume-cache
    restore: true
    mount:
      - ./node_modules
    volumes:
      - /tmp/cache/drone/ckb-time-generator:/cache

  # build
  build:
    image: node:lts
    commands:
      - npm install
      - npm run build

  # write node_modules back to cache
  rebuild-cache:
    image: drillster/drone-volume-cache
    rebuild: true
    mount:
      - ./node_modules
    volumes:
      - /tmp/cache/drone/ckb-time-generator:/cache

  # deploy production env
  deploy_production:
    image: drillster/drone-rsync
    hosts: [$HOST_IP, $HOST_IP2, $HOST_IP3]
    user: root
    secrets: [ rsync_key, host_ip, host_ip2, host_ip3 ]
    source: ./
    target: /data/code/ckb-time-generator
    script:
      - 'export NVM_DIR="$HOME/.nvm"'
      - '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
      - cd /data/code/ckb-time-generator
      - npm run reload_production
    when:
      branch: [master, main]

  # deploy_test_env
  deploy_test:
    image: drillster/drone-rsync
    hosts: [$HOST_IP_TEST]
    user: root
    secrets: [ rsync_key, host_ip_test ]
    source: ./
    target: /vdd/ckb/ckb-time-generator
    script:
      - 'export NVM_DIR="$HOME/.nvm"'
      - '[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"'
      - cd /vdd/ckb/ckb-time-generator
      - npm run reload_testnet
    when:
      branch: [test, develop]
